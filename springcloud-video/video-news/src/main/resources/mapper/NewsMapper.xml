<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  
    "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
   
<mapper namespace="com.fh.mapper.NewsMapper">
    <sql id="sql_where">
        <where>
            <if test="newsName !=null and newsName !=''">
                newsName like concat("%",#{newsName},"%")
            </if>
        </where>
    </sql>
	<select id="queryCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) from t_news <include refid="sql_where"></include>
    </select>
		<select id="queryNewsList" resultType="java.util.Map" parameterType="java.util.Map">
          select * from t_news
                    <include refid="sql_where"></include>
          limit #{start},#{length}
    </select>
    <insert id="addNews" parameterType="com.fh.entity.NewsInfo">
        insert into t_news(newsName,movieId,filePath,createTime,newsStatus,discussId,newsContent,clickRate)values(#{newsName},#{movieId},#{filePath},#{createTime},#{newsStatus},#{discussId},#{newsContent},0)
    </insert>
    <delete id="deleteNews" parameterType="java.lang.Integer">
        delete from t_news where newsId=#{newsId}
    </delete>
    <select id="toUpdateNews" parameterType="java.lang.Integer" resultType="com.fh.entity.NewsInfo">
        select * from t_news where newsId=#{dongmengjie}
    </select>
    <update id="updateNews" parameterType="com.fh.entity.NewsInfo">
    update t_news set newsName=#{newsName},movieId=#{movieId},filePath=#{filePath},createTime=#{createTime},newsStatus=#{newsStatus},discussId=#{discussId},newsContent=#{newsContent} where newsId=#{newsId}

    </update>
    <select id="queryNewsList2" resultType="com.fh.entity.NewsInfo">
        select * from t_news where newsStatus=1
    </select>
    <select id="initNewsStuatusList" resultType="com.fh.entity.NewsInfo">
        select * from t_news where newsStatus=2
    </select>
    <update id="clickRateAdd" parameterType="com.fh.entity.NewsInfo">
        update t_news set clickRate=clickRate+1 where newsId=#{newsId}
    </update>

   <!-- <select id="getBookList" resultType="com.fh.entity.Type">
        select * from t_type
    </select>
    <insert id="addBook" parameterType="com.fh.entity.Book">
        insert into t_book(bookName,filePath,createDate,typeId,price)
		values(#{bookName},#{filePath},#{createDate},#{typeId},#{price})
    </insert>
    <delete id="deleteBook" parameterType="java.lang.Integer">
        delete FROM t_book where id=#{id}
    </delete>
    <select id="getBookById" parameterType="java.lang.Integer" resultType="com.fh.entity.Book">
		select id,bookName,filePath,date_format(createDate,'%Y-%m-%d' ) createDate ,typeId,price  from t_book where id=#{liulintao}
	</select>
    <update id="update" parameterType="com.fh.entity.Book">

		update t_book set bookName=#{bookName},filePath=#{filePath},createDate=#{createDate},typeId=#{typeId},price=#{price} where id=#{id}
	</update>-->
	<!--<resultMap id="mm" type="map">
		<result property="id" column="id" />
		<result property="name" column="brandName"></result>
	</resultMap>
<sql id="sql_where">
	 <where>
		 <if test="productName !=null and productName !=''">
			 p.name like concat("%",#{productName},"%")
		 </if>
		 <if test="brandId !=null and brandId !=-1">
			and p.brandId =#{brandId}
		 </if>
		 <if test="minPrice !=null ">
			 and p.price >=#{minPrice}
		 </if>
		 <if test="maxPrice !=null ">
			 and p.price &lt;=#{maxPrice}
		 </if>
		 <if test="minDate !=null">
			 and p.createDate >=#{minDate}

		 </if>
		 <if test="maxDate !=null">
			 and p.createDate &lt;=#{maxDate}

		 </if>


	 </where>

</sql>
	<select id="queryList" resultType="product" parameterType="com.fh.param.ProductSearchParam">
		select * FROM  t_product p
		<include refid="sql_where"></include>
		limit #{start},#{length}
	</select>
	<select id="queryList2" resultType="com.fh.model.Product">
		select p.*,b.brandName from t_product p LEFT join t_brand b on p.brandId = b.id where p.status =1
	</select>

	<select id="queryReProductList" resultType="com.fh.model.Product">
		select p.*,b.brandName from t_product p LEFT join t_brand b on p.brandId = b.id where p.status =1 order by p.sales desc limit 0,2
	</select>
	<select id="queryBrandNameList" resultType="com.fh.model.Product">
     select p.filePath,b.brandName,sum(count) from t_product p LEFT join t_brand b on p.brandId = b.id left join t_shop_orderdetail t on t.productId =p.id group by b.id order by b.brandName desc limit 0,2
	</select>


	<select id="queryTotalCount" resultType="long" parameterType="com.fh.param.ProductSearchParam">
		select count(*) from t_product p
		<include refid="sql_where"></include>
	</select>
	<select id="getBrandList" resultMap="mm" >
		select * from t_brand

	</select>

	<select id="queryCount" parameterType="com.fh.param.ProductSearchParam" resultType="long">
		select count(*) from t_product p
		<include refid="sql_where"></include>

	</select>
    <insert id="addProduct" parameterType="product">
		insert into t_product(name,price,createDate,brandId,filePath,category1,category2,category3)
		values(#{name},#{price},#{createDate},#{brandId},#{filePath},#{category1},#{category2},#{category3})

	</insert>
	<select id="queryMapList" parameterType="com.fh.param.ProductSearchParam" resultMap="rm">
    select p.*,b.brandName 'aaa', CONCAT(ifnull(c1.categoryName,""),if(c2.categoryName is null,'','&ndash;&gt;'),ifnull(c2.categoryName,""),if(c3.categoryName is null,'','&ndash;&gt;'),ifnull(c3.categoryName,"")) category from t_product p LEFT join t_brand b on p.brandId = b.id
		LEFT JOIN t_category c1 on p.category1=c1.id
		LEFT JOIN t_category c2 on p.category2=c2.id
		LEFT JOIN t_category c3 on p.category3=c3.id
   <include refid="sql_where"></include>
		order by p.id desc
   limit #{start},#{length}

	</select>
	<resultMap id="rm" type="map">
		<result column="id" property="id"></result>
		<result column="name" property="name"></result>
		<result column="price" property="price"></result>
		<result column="createDate" property="createDate"></result>
		<result column="aaa" property="brandName"></result>
		<result column="category" property="category"></result>
		<result column="status" property="status"></result>
	</resultMap>

	<delete id="deleteProduct" parameterType="int">

		delete FROM t_product where id=#{id}
	</delete>

	<select id="getProductById" parameterType="int" resultType="product">
		select id,name,price,brandId,date_format(createDate,'%Y-%m-%d' ) createDate ,filePath  from t_product where id=#{zhouwenzuo}
	</select>

	<update id="updateProduct" parameterType="product">

		update t_product set name=#{name},price=#{price},brandId=#{brandId},createDate=#{createDate},filePath=#{filePath} where id=#{id}
	</update>
	<delete id="deleteBatch" parameterType="list">
		delete from t_product  where id in
		<foreach collection="list" open="(" close=")" item="item" separator=",">
			#{item}

		</foreach>
	</delete>
	<select id="queryListNoPage" parameterType="com.fh.param.ProductSearchParam" resultType="product">
		select p.*,b.brandName 'brandName' from t_product p LEFT join t_brand b on p.brandId = b.id
		<include refid="sql_where"></include>
		order by p.id desc
	</select>

	<select id="getBrandIdByBrandName" parameterType="string" resultType="int">
		SELECT  id from t_brand where brandName =#{brandName}

	</select>
    <insert id="addBrand" parameterType="brand" useGeneratedKeys="true"  keyColumn="id" keyProperty="id">
		insert into t_brand(brandName) values(#{brandName})
	</insert>
	<insert id="addProductList">
			insert into t_product(name,price,brandId) values
		   <foreach collection="list" separator="," item="it">
		   (#{it.name},#{it.price},#{it.brandId})
		   </foreach>
	</insert>
	&lt;!&ndash;修改上下架&ndash;&gt;
	<update id="upstatusProduct" parameterType="Integer">
		update t_product set status=if(status=1,2,1)
		where id=#{id}
	</update>
	<select id="selectByIdw" parameterType="int" resultType="product">
	select * from t_product where id=#{zhouwenzuo}
</select>
	&lt;!&ndash;减库存&ndash;&gt;
	<update id="updateInventory">
		update t_product set inventory=inventory-#{count},sales=sales+#{count} where id=#{productId} and inventory-#{count}>0
	</update>-->
</mapper>